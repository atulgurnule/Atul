@{
    Layout = null;
}

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <style type="text/css">
        body {
            font-family: Arial;
            font-size: 5pt;
            padding: 5pt;
        }
    </style>
</head>
<body>
    @using (Html.BeginForm("Index", "Home", FormMethod.Post))
    {
        @Html.Label("Fruits:")
        <br />
        <br />
        @*@Html.ListBoxFor(m => m.FruitIds, Model.Fruits, new { @class = "listbox" })*@
        <div class="col-md-9">
            <div class="col-md-5">
                @*<img src="~/Content/loading.gif" id="loader" height="20" width="20" style="display:none" />*@

                <ul class="list-group" id="ItemList">
                    @if (ViewBag.ItemList != null)
                    {
                        <li class="list-group-item list-group-item-heading active">
                            <h4 class="list-group-item-text">Available Documents</h4>

                        </li>
                        foreach (var item in ViewBag.ItemList)
                        {
                            <li class="list-group-item">

                                <div class="checkbox">
                                    <input id="item_@item.FruitId" type="checkbox" />
                                    <label for="item_@item.FruitId">@item.FruitName</label>
                                </div>


                            </li>

                        }
                        <li class="list-group-item"><a href="#" class="btn btn-block btn-success" onclick="SaveItems()">Save Item</a></li>

                    }

                </ul>
            </div>
        </div>
        <br />
        <br />
      
    }

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <link href="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/css/bootstrap.min.css"
          rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/js/bootstrap.min.js"></script>
    <link href="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />
    <script src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js" type="text/javascript"></script>
    @*<script type="text/javascript">
            $(function () {
                $('.listbox').multiselect({
                    includeSelectAllOption: true
                });
            });
        </script>
        @if (ViewBag.Message != null)
        {
            <script type="text/javascript">
                window.onload = function () {
                    alert("@ViewBag.Message");
                };
            </script>
        }*@
    <script>

        var SaveItems = function () {
            debugger
            //$("#loader").show();
            var ItemIdArray = [];
            var ItemsIdsCommaSeparated = "";
            $("#ItemList li input[type=checkbox]").each(function (index, val) {
                debugger
                var Id = $(val).attr("id");
                var ischecked = $("#" + Id).is(":checked", true);
                if (ischecked) {
                    debugger
                    var array = Id.split("_");
                    var ItemId = array[1];
                    ItemIdArray.push(ItemId);
                }
                ItemsIdsCommaSeparated = ItemIdArray.toString();
            })
            if (ItemIdArray.length != 0) {
                $.ajax({

                    type: "Post",
                    url: "/Home/SaveItems",
                    datatype: "Json",
                    data: { ItemIds: ItemsIdsCommaSeparated },
                    success: function (response) {
                        //$("#loader").hide();


                    }

                })

            }

        }

    </script>
</body>
</html>

 public class FruitModel
    {
        //public List<SelectListItem> Fruits { get; set; }
        //public int[] FruitIds { get; set; }
        public int FruitId { get; set; }
        public string FruitName { get; set; }
    }

using System;
using System.Linq;
using System.Web;
using System.Web.Mvc;

using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;
using CheckBox_DropDownList_MVC.Models;
namespace CheckBox_DropDownList_MVC.Controllers
{
    public class HomeController : Controller
    {
        // GET: Home
       
        public ActionResult Index()
        {
            //FruitModel fruit = new FruitModel();
            List<FruitModel> ItemList = new List<FruitModel>();
            string constr = ConfigurationManager.ConnectionStrings["Constring"].ConnectionString;
            using (SqlConnection con = new SqlConnection(constr))
            {
                string query = " SELECT FruitName, FruitId FROM Fruits";
                using (SqlCommand cmd = new SqlCommand(query))
                {
                    cmd.Connection = con;
                    con.Open();
                    using (SqlDataReader sdr = cmd.ExecuteReader())
                    {
                        while (sdr.Read())
                        {
                            ItemList.Add(new FruitModel
                            {
                                FruitName = sdr["FruitName"].ToString(),
                                FruitId = Convert.ToInt32(sdr["FruitId"].ToString())
                            });
                        }
                    }
                    con.Close();
                }
            }
            ViewBag.ItemList = ItemList;

            return View();
            //return ItemList;

            ////fruit.Fruits = PopulateFruits();
            //ViewBag.ItemList = fruit;
           
        }

        [HttpPost]
        public JsonResult SaveItems(string ItemIds)
        {
            string[] arrayIds = ItemIds.Split(',');

            foreach (string item in arrayIds)
            {
                var id = item;

            }
            return Json("", JsonRequestBehavior.AllowGet);
        }

       
        private static List<SelectListItem> PopulateFruits()
        {
            List<SelectListItem> ItemList = new List<SelectListItem>();
            string constr = ConfigurationManager.ConnectionStrings["Constring"].ConnectionString;
            using (SqlConnection con = new SqlConnection(constr))
            {
                string query = " SELECT FruitName, FruitId FROM Fruits";
                using (SqlCommand cmd = new SqlCommand(query))
                {
                    cmd.Connection = con;
                    con.Open();
                    using (SqlDataReader sdr = cmd.ExecuteReader())
                    {
                        while (sdr.Read())
                        {
                            ItemList.Add(new SelectListItem
                            {
                                Text = sdr["FruitName"].ToString(),
                                Value = sdr["FruitId"].ToString()
                            });
                        }
                    }
                    con.Close();
                }
            }

            return ItemList;
        }
    }
}

CREATE TABLE [dbo].[Fruits](
	[FruitId] [int] NOT NULL,
	[FruitName] [varchar](30) NOT NULL,
 CONSTRAINT [PK_Fruits_1] PRIMARY KEY CLUSTERED 
(
	[FruitId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

INSERT INTO Fruits
SELECT 1,'Mango'
UNION ALL
SELECT 2,'Orange'
UNION ALL
SELECT 3,'Banana'
UNION ALL
SELECT 4,'Apple'
UNION ALL
SELECT 5,'Papaya'
